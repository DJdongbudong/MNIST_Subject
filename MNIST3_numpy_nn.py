# python 3.6
# Author: Scc_hy
# Create date: 2020-08-27
# Function: 用numpy实现神经网络，并训练预测mnist数据集

import pandas as pd 
import numpy as np
from sklearn.datasets import fetch_mldata
from utils.utils_tools import clock, get_ministdata
from utils.numpynn import npLayer, NeuralNetwork
import warnings
warnings.filterwarnings(action='ignore')
import time



if __name__ == '__main__':
    mnistdf = get_ministdata()
    te_index = mnistdf.sample(frac=0.8).index.tolist()
    mnist_te = mnistdf.loc[te_index, :]
    mnist_tr = mnistdf.loc[~mnistdf.index.isin(te_index), :]
    x_tr, y_tr = mnist_tr.iloc[:, :-1].values, mnist_tr.iloc[:, -1].values
    x_te, y_te = mnist_te.iloc[:, :-1].values, mnist_te.iloc[:, -1].values
    print(x_te.shape)
    nn = NeuralNetwork()
    nn.add_layer(npLayer(784, 128, 'relu')) 
    nn.add_layer(npLayer(128, 10, 'sigmoid'))
    st = time.perf_counter()
    mses, accs = nn.train(x_tr, x_te, y_tr, y_te, 0.01, 150)
    cost_ = time.perf_counter() - st
    print(f'cost: {cost_:.2f}s',accs)
  
 """
 ================================================================================
Epoch: # 50, MSE: 0.01421
Accuracy: 90.78 %


 ================================================================================
Epoch: # 55, MSE: 0.01291
Accuracy: 91.49 % 


 ================================================================================
Epoch: # 60, MSE: 0.01162
Accuracy: 92.13 % 


 ================================================================================
Epoch: # 65, MSE: 0.01055
Accuracy: 92.65 % 


 ================================================================================
Epoch: # 70, MSE: 0.00964
Accuracy: 93.02 % 


 ================================================================================
Epoch: # 75, MSE: 0.00874
Accuracy: 93.36 % 


 ================================================================================
Epoch: # 80, MSE: 0.00784
Accuracy: 93.73 % 


 ================================================================================
Epoch: # 85, MSE: 0.00713
Accuracy: 93.93 % 


 ================================================================================
Epoch: # 90, MSE: 0.00654
Accuracy: 94.09 % 


 ================================================================================
Epoch: # 95, MSE: 0.00600
Accuracy: 94.27 % 


 ================================================================================
Epoch: # 100, MSE: 0.00558
Accuracy: 94.41 % 


 ================================================================================
Epoch: # 105, MSE: 0.00514
Accuracy: 94.53 % 


 ================================================================================
Epoch: # 110, MSE: 0.00479
Accuracy: 94.65 % 


 ================================================================================
Epoch: # 115, MSE: 0.00447
Accuracy: 94.75 % 


 ================================================================================
Epoch: # 120, MSE: 0.00417
Accuracy: 94.84 % 


 ================================================================================
Epoch: # 125, MSE: 0.00393
Accuracy: 94.93 % 


 ================================================================================
Epoch: # 130, MSE: 0.00370
Accuracy: 94.98 % 


 ================================================================================
Epoch: # 135, MSE: 0.00350
Accuracy: 95.03 %


 ================================================================================
Epoch: # 140, MSE: 0.00332
Accuracy: 95.08 %


 ================================================================================
Epoch: # 145, MSE: 0.00316
Accuracy: 95.12 %


 ================================================================================
Epoch: # 150, MSE: 0.00303
Accuracy: 95.14 %

cost: 1104.11s [0.2034285714285714, 0.5135714285714286, 0.5907142857142857, 0.6798928571428572, 0.74375, 0.7954285714285715
, 0.8364821428571428, 0.863125, 0.8833571428571428, 0.8975178571428571, 0.9077857142857142, 0.9149285714285714, 0.9213214285714286
, 0.9264821428571427, 0.9302142857142858, 0.9336071428571429, 0.9372678571428571, 0.9392857142857143, 0.9408928571428572, 0.9427321428571429
, 0.9440535714285714, 0.94525, 0.9465178571428572, 0.9475178571428572, 0.9483571428571429, 0.9493035714285715, 0.9498214285714286
, 0.9502857142857143, 0.95075, 0.9511607142857144, 0.9513571428571429]
 
 """
